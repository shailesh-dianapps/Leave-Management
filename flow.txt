PORT=4000
MONGO_URI=mongodb://localhost:27017/leave_system
JWT_SECRET=ed827e33ed36aba5a874ee4e94443429222a56ae7f5850a0e112690aa8fafaf3f90009ca6ac70f65bc372b7dff9b47488a0e28c7f3eefde952f8c5f9c985e779
JWT_EXPIRES_IN=7d



🔄 Testing Flow
1. Register Users

POST /api/auth/register

Register Employee → role: "employee"

Register HR → role: "hr"

Register Management → role: "management"

✅ Expected: All users created in DB with default leave bank (2 per month).

2. Login

POST /api/auth/login for each user

Get JWT token for Employee, HR, and Management.

✅ Expected: Token returned. Use it in Authorization: Bearer <token> for next requests.

3. Employee Actions

View leave history

GET /api/leaves/mine

✅ Should return empty initially.

View public holidays

GET /api/holidays

✅ Should return holidays (empty if none added yet).

Apply leave

POST /api/leaves/apply

{ "leaveType": "sick", "startDate": "2025-09-10", "endDate": "2025-09-12", "comment": "Flu" }


✅ Status = pending, leave bank unchanged.

Check leave balance after approval

After HR approves, check again with GET /api/users/me

✅ Leave balance reduced (weekends + public holidays excluded).

4. HR Actions

View own leaves

GET /api/leaves/mine

View employees' pending leaves

GET /api/leaves/pending

✅ Should show Employee’s leave request.

Approve/Reject employee leave

POST /api/leaves/:id/approve OR reject

✅ Employee’s leave status updated.

Apply own leave

POST /api/leaves/apply

✅ Status = pending, only Management can approve it.

Add/Edit public holiday

POST /api/holidays/add

{ "date": "2025-09-15", "name": "Independence Day" }


✅ Holiday visible in GET /api/holidays

Fetch employees list

GET /api/users

✅ Returns all employees with roles.

5. Management Actions

View all leave requests

GET /api/leaves/all

✅ Should see Employee + HR leaves.

Approve/Reject HR leave

POST /api/leaves/:id/approve

✅ HR’s leave gets approved, balance deducted.

⚠️ Should not allow approving Employee leaves (only HR can).

6. Logout

POST /api/auth/logout

Send token in header.

✅ Token stored in blacklist, can’t be reused.

Try calling any API with blacklisted token → should return 401 Unauthorized.